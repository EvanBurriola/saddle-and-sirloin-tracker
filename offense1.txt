Inspecting 73 files
CCCWCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source "https://rubygems.org"
^
Gemfile:1:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
source "https://rubygems.org"
       ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:4:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ruby "3.1.2"
     ^^^^^^^
Gemfile:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
    ^^^^^^^
Gemfile:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
             ^^^^^^^^^^
Gemfile:10:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "sprockets-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:13:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
    ^^^^
Gemfile:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
          ^^^^^^^^
Gemfile:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
    ^^^^^^
Gemfile:16:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
            ^^^^^^^^
Gemfile:19:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "importmap-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "turbo-rails"
    ^^^^^^^^^^^^^
Gemfile:25:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "stimulus-rails"
    ^^^^^^^^^^^^^^^^
Gemfile:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "jbuilder"
    ^^^^^^^^^^
Gemfile:30:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Google OATH api
^^^^^^^^^^^^^^^^
Gemfile:31:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "devise"
    ^^^^^^^^
Gemfile:34:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "omniauth-rails_csrf_protection", "~> 1.0"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:34:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "omniauth-rails_csrf_protection", "~> 1.0"
                                      ^^^^^^^^
Gemfile:46:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
    ^^^^^^^^^^^^^
Gemfile:46:34: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                 ^
Gemfile:46:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                                             ^
Gemfile:49:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bootsnap", '>= 1.4.4' , require: false
    ^^^^^^^^^^
Gemfile:49:27: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
gem "bootsnap", '>= 1.4.4' , require: false
                          ^
Gemfile:50:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rexml"
    ^^^^^^^
Gemfile:60:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "byebug", platforms: %i[ mri mingw x64_mingw ]
      ^^^^^^^^
Gemfile:60:31: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "byebug", platforms: %i[ mri mingw x64_mingw ]
                              ^
Gemfile:60:51: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "byebug", platforms: %i[ mri mingw x64_mingw ]
                                                  ^
Gemfile:61:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "rspec-rails" 
      ^^^^^^^^^^^^^
Gemfile:61:20: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  gem "rspec-rails" 
                   ^
Gemfile:66:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "web-console"
      ^^^^^^^^^^^^^
Gemfile:77:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "capybara", ">= 3.26"
      ^^^^^^^^^^
Gemfile:77:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "capybara", ">= 3.26"
                  ^^^^^^^^^
Gemfile:78:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "selenium-webdriver"
      ^^^^^^^^^^^^^^^^^^^^
Gemfile:79:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "webdrivers"
      ^^^^^^^^^^^^
Gemfile:84:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
    ^^^^^^^^^^^^^^^^^^^
Gemfile:84:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
                         ^^^^^^^^
Gemfile:85:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem rake should appear before tailwindcss-rails.
gem 'rake'
^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/admins/omniauth_callbacks_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admins::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^
app/controllers/admins/omniauth_callbacks_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def google_oauth2
^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:7:27: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        flash[:success] = t 'devise.omniauth_callbacks.success', kind: 'Google'
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:8:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        sign_in_and_redirect admin, event: :authentication
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:10:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        flash[:alert] = t 'devise.omniauth_callbacks.failure', kind: 'Google', reason: "#{auth.info.email} is not authorized."
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:11:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        redirect_to new_admin_session_path
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:17:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_omniauth_failure_path_for(_scope)
^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:21:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def after_sign_in_path_for(resource_or_scope)
^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:27:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def from_google_params
^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:36:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def auth
^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:39:3: W: [Correctable] Layout/EndAlignment: end at 39, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/admins/sessions_controller.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#OATH
^^^^^
app/controllers/admins/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#OATH
^
app/controllers/announcements_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AnnouncementsController < ApplicationController
^
app/controllers/announcements_controller.rb:12:28: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
    if @announcement.title === "" || @announcement.description === ""
                           ^^^
app/controllers/announcements_controller.rb:12:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if @announcement.title === "" || @announcement.description === ""
                               ^^
app/controllers/announcements_controller.rb:12:64: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
    if @announcement.title === "" || @announcement.description === ""
                                                               ^^^
app/controllers/announcements_controller.rb:12:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if @announcement.title === "" || @announcement.description === ""
                                                                   ^^
app/controllers/announcements_controller.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash.alert = "Invalid input"
                    ^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:14:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to announcements_path
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:16:7: C: [Correctable] Style/IfInsideElse: Convert if nested inside else to elsif.
      if @announcement.save
      ^^
app/controllers/announcements_controller.rb:17:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        redirect_to announcements_path, notice: "Announcement created."
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:17:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        redirect_to announcements_path, notice: "Announcement created."
                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:19:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #The new action is not being called
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:20:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #assign any instance vars needed for the template
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:21:23: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        render('new') #just renders the view new
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:21:23: C: Style/InlineComment: Avoid trailing inline comments.
        render('new') #just renders the view new
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:22:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash.alert = "Announcement not found."
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:34:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to announcement_path(@announcement), notice: "Announcement updated."
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:34:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to announcement_path(@announcement), notice: "Announcement updated."
                                                            ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:37:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash.alert = "Announcement not found."
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:51:19: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @announcement.destroy
                  ^^^^^^^
app/controllers/announcements_controller.rb:52:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to announcements_path, notice: "Announcement was successfully destroyed."
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:52:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to announcements_path, notice: "Announcement was successfully destroyed."
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:55:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def calendar ...
  ^^^^^^^^^^^^
app/controllers/announcements_controller.rb:58:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/announcements_controller.rb:59:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def announcement_params
^^^^
app/controllers/announcements_controller.rb:59:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def announcement_params ...
    ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/announcements_controller.rb:62:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    before_action :authenticate_admin!
^^^^
app/controllers/books_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class BooksController < ApplicationController
^
app/controllers/books_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_book, only: %i[ show edit update destroy ]
                                    ^
app/controllers/books_controller.rb:2:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_book, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/books_controller.rb:30:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to book_url(@book), notice: "Book was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:30:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to book_url(@book), notice: "Book was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @book }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:33:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:34:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @book.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:43:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to book_url(@book), notice: "Book was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:43:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to book_url(@book), notice: "Book was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @book }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:46:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:47:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @book.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/books_controller.rb:59:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @book.destroy
          ^^^^^^^
app/controllers/books_controller.rb:60:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to books_path, notice: "Book was successfully destroyed."
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:60:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to books_path, notice: "Book was successfully destroyed."
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/books_controller.rb:63:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/books_controller.rb:65:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_book
^^^^
app/controllers/books_controller.rb:65:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_book ...
    ^^^^^^^^^^^^
app/controllers/books_controller.rb:70:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def book_params
^^^^
app/controllers/books_controller.rb:70:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def book_params ...
    ^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CommitteesController < ApplicationController
^
app/controllers/committees_controller.rb:2:42: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_committee, only: %i[ show edit update destroy ]
                                         ^
app/controllers/committees_controller.rb:2:67: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_committee, only: %i[ show edit update destroy ]
                                                                  ^
app/controllers/committees_controller.rb:25:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to committees_path, notice: "Committee was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:25:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to committees_path, notice: "Committee was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:26:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @committee }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @committee.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:37:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to committees_path, notice: "Committee was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:37:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to committees_path, notice: "Committee was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:38:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @committee }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:40:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @committee.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:52:16: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @committee.destroy
               ^^^^^^^
app/controllers/committees_controller.rb:53:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to committees_path, notice: "Committee was successfully deleted."
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:53:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to committees_path, notice: "Committee was successfully deleted."
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/committees_controller.rb:56:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/committees_controller.rb:64:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/dashboards_controller.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#OATH
^^^^^
app/controllers/dashboards_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#OATH
^
app/controllers/dashboards_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/dashboards_controller.rb:3:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/dashboards_controller.rb:5:3: W: [Correctable] Layout/EndAlignment: end at 5, 2 is not aligned with class at 2, 0.
  end
  ^^^
app/controllers/events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventsController < ApplicationController
^
app/controllers/events_controller.rb:2:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 2).
      # GET /books or /books.json
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to event_url(@event), notice: "Event was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:28:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully created." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @event }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @event.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to event_url(@event), notice: "Event was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:42:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:43:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @event }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:46:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @event.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:54:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/events_controller.rb:58:12: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @event.destroy
           ^^^^^^^
app/controllers/events_controller.rb:59:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to events_path, notice: "Event was successfully destroyed."
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:59:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to events_path, notice: "Event was successfully destroyed."
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:62:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/events_controller.rb:64:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_book
^^^^
app/controllers/events_controller.rb:64:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_book ...
    ^^^^^^^^^^^^
app/controllers/events_controller.rb:69:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def event_params
^^^^
app/controllers/events_controller.rb:69:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def event_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/polls_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PollsController < ApplicationController
^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:3:3: C: Rails/LexicallyScopedActionFilter: show, destroy are not explicitly defined on the class.
  before_action :set_user, only: %i[ show edit update destroy ]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:3:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                    ^
app/controllers/users_controller.rb:3:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/users_controller.rb:6:25: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
    @users = User.order(sort_column + " " + sort_direction)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:6:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @users = User.order(sort_column + " " + sort_direction)
                                      ^^^
app/controllers/users_controller.rb:20:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to users_path, notice: "User was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:20:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to users_path, notice: "User was successfully updated." }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:21:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @user }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:24:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @user.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:29:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:31:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    User.column_names.include?(params[:sort]) ? params[:sort] : "first_name"
                                                                ^^^^^^^^^^^^
app/controllers/users_controller.rb:35:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    %w[asc desc].include?(params[:direction]) ? params[:direction] : "asc"
                                                                     ^^^^^
app/controllers/users_controller.rb:45:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/helpers/announcements_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module AnnouncementsHelper
^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/application_helper.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def sortable (column, title = nil)
^^^^
app/helpers/application_helper.rb:2:17: C: [Correctable] Layout/SpaceAfterMethodName: Do not put a space between a method name and the opening parenthesis.
    def sortable (column, title = nil)
                ^
app/helpers/application_helper.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        title ||= column.titleize
    ^^^^
app/helpers/application_helper.rb:5:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        direction = column == sort_column && sort_direction == "asc" ? "desc" : "asc"
                                                               ^^^^^
app/helpers/application_helper.rb:5:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        direction = column == sort_column && sort_direction == "asc" ? "desc" : "asc"
                                                                       ^^^^^^
app/helpers/application_helper.rb:5:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        direction = column == sort_column && sort_direction == "asc" ? "desc" : "asc"
                                                                                ^^^^^
app/helpers/application_helper.rb:6:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:6:24: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                       ^
app/helpers/application_helper.rb:6:25: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                        ^^^^^^^^
app/helpers/application_helper.rb:6:42: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                                         ^^^^^^^^^^^^^
app/helpers/application_helper.rb:6:65: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                                                                ^
app/helpers/application_helper.rb:6:68: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                                                                   ^
app/helpers/application_helper.rb:6:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                                                                    ^^^^^^^^^
app/helpers/application_helper.rb:6:88: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        link_to title, {:sort => column, :direction => direction}, {:class => css_class}
                                                                                       ^
app/helpers/books_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module BooksHelper
^
app/helpers/committees_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module CommitteesHelper
^
app/helpers/events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventsHelper
^
app/helpers/polls_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PollsHelper
^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/application_mailer.rb:2:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  default from: "from@example.com"
                ^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:3:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "mailer"
         ^^^^^^^^
app/models/admin.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin < ApplicationRecord
^
app/models/admin.rb:5:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return nil unless email =~ /@tamu.edu\z/ #Ensures only in network (tamu.edu) accounts have access
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:5:23: C: [Correctable] Performance/RegexpMatch: Use match? instead of =~ when MatchData is not used.
    return nil unless email =~ /@tamu.edu\z/ #Ensures only in network (tamu.edu) accounts have access
                      ^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:5:46: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    return nil unless email =~ /@tamu.edu\z/ #Ensures only in network (tamu.edu) accounts have access
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:5:46: C: Style/InlineComment: Avoid trailing inline comments.
    return nil unless email =~ /@tamu.edu\z/ #Ensures only in network (tamu.edu) accounts have access
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:6:71: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 70 instead of 4).
                                                                      #find only would require admins to create new users
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:6:71: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
                                                                      #find only would require admins to create new users
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:7:106: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    create_with(uid: uid, full_name: full_name, avatar_url: avatar_url).find_or_create_by!(email: email) #Possibly change to find only
                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:7:106: C: Style/InlineComment: Avoid trailing inline comments.
    create_with(uid: uid, full_name: full_name, avatar_url: avatar_url).find_or_create_by!(email: email) #Possibly change to find only
                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:9:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/announcement.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Announcement < ApplicationRecord
^
app/models/announcement.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :title, presence: true
^^^^
app/models/announcement.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/book.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Book < ApplicationRecord
^
app/models/book.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :title, presence: true
^^^^
app/models/book.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :author, presence: true
^^^^
app/models/book.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :price, presence: true
^^^^
app/models/book.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :publishedDate, presence: true
^^^^
app/models/committee.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Committee < ApplicationRecord
^
app/models/committee.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :committee_name, presence: true
^^^^
app/models/committee.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/committee.rb:4:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/models/event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Event < ApplicationRecord
^
app/models/event.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :name, presence: true
^^^^
app/models/event.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :date, presence: true
^^^^
app/models/event.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :event_type, presence: true
^^^^
app/models/event.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :description, presence: true
^^^^
app/models/poll.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Poll < ApplicationRecord
^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
app/models/user.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :uin, presence: true
^^^^
app/models/user.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :first_name, presence: true
^^^^
app/models/user.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :last_name, presence: true
^^^^
app/models/user.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :email, presence: true
^^^^
app/models/user.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :phone, presence: true
^^^^
app/models/user.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :isActive, presence: true
^^^^
app/models/user.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :role, presence: true
^^^^
app/models/user.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :classify, presence: true
^^^^
app/views/books/_book.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! book, :id, :title, :created_at, :updated_at
^
app/views/books/_book.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! book, :id, :title, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/books/_book.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url book_url(book, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/books/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @books, partial: "books/book", as: :book
^
app/views/books/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @books, partial: "books/book", as: :book
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/books/index.json.jbuilder:1:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @books, partial: "books/book", as: :book
                             ^^^^^^^^^^^^
app/views/books/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "books/book", book: @book
^
app/views/books/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "books/book", book: @book
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/books/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "books/book", book: @book
              ^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
db/seeds.rb:9:14: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
Announcement.create(title: "First Announcement!", description: "This is the description!")
             ^^^^^^
db/seeds.rb:9:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Announcement.create(title: "First Announcement!", description: "This is the description!")
                           ^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:9:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Announcement.create(title: "First Announcement!", description: "This is the description!")
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:14: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
Announcement.create(title: "Second Announcement!", description: "This is the second description!")
             ^^^^^^
db/seeds.rb:10:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Announcement.create(title: "Second Announcement!", description: "This is the second description!")
                           ^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Announcement.create(title: "Second Announcement!", description: "This is the second description!")
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:7: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
Admin.create(email: "evanburriola12@tamu.edu")
      ^^^^^^
db/seeds.rb:11:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Admin.create(email: "evanburriola12@tamu.edu")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:47: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
Admin.create(email: "evanburriola12@tamu.edu")
                                              
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/announcements_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/announcements_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe AnnouncementsHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/committees_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/committees_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe CommitteesHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/events_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/events_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe EventsHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/polls_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/polls_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe PollsHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/users_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/users_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe UsersHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/admin_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/admin_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Admin, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/announcement_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Announcement, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/announcement_spec.rb:6:5: C: RSpec/RepeatedExample: Don't repeat examples within an example group.
    it 'ensures announcement title' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:7:13: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Announcement.
      ann = Announcement.new(description: "This is the description!").save
            ^^^^^^^^^^^^
spec/models/announcement_spec.rb:7:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ann = Announcement.new(description: "This is the description!").save
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:8:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(ann).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:11:5: C: RSpec/RepeatedExample: Don't repeat examples within an example group.
    it 'ensures announcement description' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:12:13: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Announcement.
      ann = Announcement.new(description: "This is the description!").save
            ^^^^^^^^^^^^
spec/models/announcement_spec.rb:12:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ann = Announcement.new(description: "This is the description!").save
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:13:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(ann).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/announcement_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/committee_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/committee_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Committee, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:5:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/committee_spec.rb:8:13: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Committee.
      com = Committee.new(committee_name: "IM Committee").save
            ^^^^^^^^^
spec/models/committee_spec.rb:8:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      com = Committee.new(committee_name: "IM Committee").save
                                          ^^^^^^^^^^^^^^
spec/models/committee_spec.rb:9:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(com).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:14:13: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Committee.
      com = Committee.new(description: "Organize team sport competitions").save
            ^^^^^^^^^
spec/models/committee_spec.rb:14:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      com = Committee.new(description: "Organize team sport competitions").save
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:15:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(com).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:20:13: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Committee.
      com = Committee.new(committee_name: "IM Committee", description: "Organize sport teams.").save
            ^^^^^^^^^
spec/models/committee_spec.rb:20:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      com = Committee.new(committee_name: "IM Committee", description: "Organize sport teams.").save
                                          ^^^^^^^^^^^^^^
spec/models/committee_spec.rb:20:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      com = Committee.new(committee_name: "IM Committee", description: "Organize sport teams.").save
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:21:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(com).to eq(true)
      ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/committee_spec.rb:23:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/committee_spec.rb:25:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/models/event_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/event_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Event, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:4:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/event_spec.rb:6:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/event_spec.rb:8:15: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Event.
      event = Event.new(event_type: 3, date: '12/12/2023', description: "cookout where you can meet fellow members.").save
              ^^^^^
spec/models/event_spec.rb:8:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event = Event.new(event_type: 3, date: '12/12/2023', description: "cookout where you can meet fellow members.").save
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:9:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(event).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:13:15: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Event.
      event = Event.new(event_type: 3, name: 'Cookout', description: "cookout where you can meet fellow members.").save
              ^^^^^
spec/models/event_spec.rb:13:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event = Event.new(event_type: 3, name: 'Cookout', description: "cookout where you can meet fellow members.").save
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:14:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(event).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:17:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    ##ensures the date for the event is after the day the event was created.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:18:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    ##ensures the date is of the format DD/MM/YYYY (or change it so it has to be MM/DD/YYYY)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:21:15: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Event.
      event = Event.new(event_type: 3, date: '12/12/2012', date: "12/12/2023").save
              ^^^^^
spec/models/event_spec.rb:21:60: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
      event = Event.new(event_type: 3, date: '12/12/2012', date: "12/12/2023").save
                                                           ^^^^
spec/models/event_spec.rb:21:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event = Event.new(event_type: 3, date: '12/12/2012', date: "12/12/2023").save
                                                                 ^^^^^^^^^^^^
spec/models/event_spec.rb:22:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(event).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:26:15: C: [Correctable] RSpec/DescribedClass: Use described_class instead of Event.
      event = Event.new(name: "Cookout", date: '12/12/2012', description: "cookout where you can meet fellow members.").save
              ^^^^^
spec/models/event_spec.rb:26:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event = Event.new(name: "Cookout", date: '12/12/2012', description: "cookout where you can meet fellow members.").save
                              ^^^^^^^^^
spec/models/event_spec.rb:26:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event = Event.new(name: "Cookout", date: '12/12/2012', description: "cookout where you can meet fellow members.").save
                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:27:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(event).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:29:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/event_spec.rb:32:3: W: Lint/EmptyBlock: Empty block detected.
  context 'page loading tests' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:32:3: C: [Correctable] RSpec/EmptyExampleGroup: Empty example group detected.
  context 'page loading tests' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:33:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/event_spec.rb:35:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/poll_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/poll_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Poll, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/user_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe User, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/user_spec.rb:8:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of User.
      user = User.new(uin: "123456789").save
             ^^^^
spec/models/user_spec.rb:8:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789").save
                           ^^^^^^^^^^^
spec/models/user_spec.rb:9:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(user).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:14:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of User.
      user = User.new(first_name: "Pauline").save
             ^^^^
spec/models/user_spec.rb:14:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(first_name: "Pauline").save
                                  ^^^^^^^^^
spec/models/user_spec.rb:15:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(user).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:20:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of User.
      user = User.new(last_name: "Wade").save
             ^^^^
spec/models/user_spec.rb:20:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(last_name: "Wade").save
                                 ^^^^^^
spec/models/user_spec.rb:21:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(user).to eq(false)
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:27:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of User.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
             ^^^^
spec/models/user_spec.rb:27:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                           ^^^^^^^^^^^
spec/models/user_spec.rb:27:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                    ^^^^^^^^^
spec/models/user_spec.rb:27:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                                          ^^^^^^
spec/models/user_spec.rb:27:90: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:27:122: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                                                                                         ^^^^^^^^^^^^
spec/models/user_spec.rb:27:158: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                                                                                                                             ^^^
spec/models/user_spec.rb:27:173: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      user = User.new(uin: "123456789", first_name: "Pauline", last_name: "Wade", email: "pauline.wade@tamu.edu", phone: "1234567890", isActive: true, role: "0", classify: "4").save
                                                                                                                                                                            ^^^
spec/models/user_spec.rb:28:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(user).to eq(true)
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:30:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:30:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  abort e.to_s.strip
  ^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:34:25: C: Rails/FilePath: Prefer Rails.root.join('path/to').
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/committees_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/committees_spec.rb:4:1: C: [Correctable] RSpec/EmptyExampleGroup: Empty example group detected.
RSpec.describe "Committees", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/committees_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "Committees", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/committees_spec.rb:4:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Committees", type: :request do
               ^^^^^^^^^^^^
spec/requests/committees_spec.rb:32:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/events_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/events_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "Events", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Events", type: :request do
               ^^^^^^^^
spec/requests/events_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/polls_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/polls_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "Polls", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/polls_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Polls", type: :request do
               ^^^^^^^
spec/requests/polls_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/users_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/users_spec.rb:3:1: C: [Correctable] RSpec/EmptyExampleGroup: Empty example group detected.
RSpec.describe "Users", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "Users", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Users", type: :request do
               ^^^^^^^
spec/requests/users_spec.rb:38:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/unit/unit_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe Book, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:4:1: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [20, 36, 52]
RSpec.describe Book, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Book, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:10:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:10:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:14:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.title = nil
    ^^^^^^^
spec/unit/unit_spec.rb:15:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:15:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/unit_spec.rb:20:1: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [4, 36, 52]
RSpec.describe Book, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:20:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Book, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(title: 'twilight', author: 'Stephenie Meyer', price: '1.99', publishedDate: '2019-09-09 00:00:00 UTC')
    ^^^^
spec/unit/unit_spec.rb:24:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:26:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:26:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:28:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:30:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.author = nil
      ^^^^^^^
spec/unit/unit_spec.rb:31:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).not_to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:31:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:33:3: C: [Correctable] Layout/BlockAlignment: end at 33, 2 is not aligned with RSpec.describe Book, type: :model do at 20, 0.
  end
  ^^^
spec/unit/unit_spec.rb:36:1: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [4, 20, 52]
RSpec.describe Book, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:36:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Book, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(title: 'twilight', author: 'Stephenie Meyer', price: '1.99', publishedDate: '2019-09-09 00:00:00 UTC')
    ^^^^
spec/unit/unit_spec.rb:40:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:42:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:42:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:44:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:46:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.price = nil
      ^^^^^^^
spec/unit/unit_spec.rb:47:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).not_to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:49:3: C: [Correctable] Layout/BlockAlignment: end at 49, 2 is not aligned with RSpec.describe Book, type: :model do at 36, 0.
  end
  ^^^
spec/unit/unit_spec.rb:52:1: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [4, 20, 36]
RSpec.describe Book, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:52:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Book, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        described_class.new(title: 'twilight', author: 'Stephenie Meyer', price: '1.99', publishedDate: '2019-09-09 00:00:00 UTC')
    ^^^^
spec/unit/unit_spec.rb:56:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:58:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:58:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:60:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:62:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.price = nil
      ^^^^^^^
spec/unit/unit_spec.rb:63:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(subject).not_to be_valid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:63:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to be_valid
             ^^^^^^^
spec/unit/unit_spec.rb:65:3: C: [Correctable] Layout/BlockAlignment: end at 65, 2 is not aligned with RSpec.describe Book, type: :model do at 52, 0.
  end
  ^^^
spec/views/announcements/delete.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/announcements/delete.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "announcements/delete.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/delete.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "announcements/delete.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/edit.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/announcements/edit.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "announcements/edit.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/edit.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "announcements/edit.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/index.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/announcements/index.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "announcements/index.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/index.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "announcements/index.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/new.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/announcements/new.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "announcements/new.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/new.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "announcements/new.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/show.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/announcements/show.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "announcements/show.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/announcements/show.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "announcements/show.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/delete.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/committees/delete.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "committees/delete.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/delete.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "committees/delete.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/edit.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/committees/edit.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "committees/edit.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/edit.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "committees/edit.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/index.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/committees/index.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "committees/index.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/index.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "committees/index.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/new.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/committees/new.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "committees/new.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/committees/new.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "committees/new.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/delete.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/delete.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "users/delete.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/delete.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/delete.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/edit.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "users/edit.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/edit.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/index.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/index.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "users/index.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/index.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/index.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/new.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "users/new.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/new.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/show.html.tailwindcss_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/show.html.tailwindcss_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "users/show.html.tailwindcss", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/show.html.tailwindcss_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/show.html.tailwindcss", type: :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/books_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create book" do
       ^^^^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:19:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Book.count") do
                      ^^^^^^^^^^^^
test/controllers/books_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show book" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update book" do
       ^^^^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy book" do
       ^^^^^^^^^^^^^^^^^^^^^
test/controllers/books_controller_test.rb:42:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Book.count", -1) do
                      ^^^^^^^^^^^^
test/models/book_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/book_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/system/books_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "application_system_test_case"
^
test/system/books_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Books"
                    ^^^^
test/system/books_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Books"
                                ^^^^^^^
test/system/books_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create book" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New book"
             ^^^^^^^^^^
test/system/books_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Title", with: @book.title
            ^^^^^^^
test/system/books_test.rb:18:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Book"
             ^^^^^^^^^^^^^
test/system/books_test.rb:20:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Book was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:21:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/books_test.rb:24:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update Book" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:26:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this book", match: :first
             ^^^^^^^^^^^^^^^^
test/system/books_test.rb:28:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Title", with: @book.title
            ^^^^^^^
test/system/books_test.rb:29:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Book"
             ^^^^^^^^^^^^^
test/system/books_test.rb:31:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Book was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:32:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/books_test.rb:35:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy Book" do
       ^^^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:37:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this book", match: :first
             ^^^^^^^^^^^^^^^^^^^
test/system/books_test.rb:39:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Book was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV["RAILS_ENV"] ||= "test"
^
test/test_helper.rb:1:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
    ^^^^^^^^^^^
test/test_helper.rb:1:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
                     ^^^^^^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^

73 files inspected, 483 offenses detected, 455 offenses autocorrectable
